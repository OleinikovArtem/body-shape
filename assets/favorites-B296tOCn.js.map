{"version":3,"file":"favorites-B296tOCn.js","sources":["../../src/js/api.js","../../src/js/menu.js","../../src/js/favorites.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://your-energy.b.goit.study/api';\n\nclass APIService {\n  constructor() {\n    this.baseURL = BASE_URL;\n    this.page = 0;\n  }\n\n  resetPage() {\n    this.page = 0;\n  }\n\n  async getExercises(params1, params2, page = 1) {\n    const fullUrl = `${this.baseURL}/exercises?${params1}=${params2}&page=${page}&limit=10`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getSearch(params1, params2, params3) {\n    const fullUrl = `${this.baseURL}/exercises?${params1}=${params2}&keyword=${params3}&page=1&limit=10`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getExercisesById(id) {\n    const fullUrl = `${this.baseURL}/exercises/${id}`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getFilter(params, page = 1) {\n    const fullUrl = `${this.baseURL}/filters?filter=${params}&page=${page}&limit=12`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getExercisesByCategory(page = 1, limit = 12, filter = 'Muscles') {\n    const params = { filter, page, limit };\n    const fullUrl = `${this.baseURL}/filters?${this.getParameters(params)}`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getExercisesByKeyword(page = 1, limit = 12, category, categoryName, keyword) {\n    const params = { page, limit };\n    params[category] = categoryName;\n    if (keyword) {\n      params['keyword'] = keyword;\n    }\n    const fullUrl = `${this.baseURL}/exercises?${this.getParameters(params)}`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getQuote() {\n    const fullUrl = `${this.baseURL}/quote`;\n    return this.requestGET(fullUrl);\n  }\n\n  async patchRating(id, ratingData) {\n    const fullUrl = `${this.baseURL}/exercises/${id}/rating`;\n    return this.requestPATCH(fullUrl, ratingData);\n  }\n\n  async postSubscriptions(email) {\n    const fullUrl = `${this.baseURL}/subscription`;\n    return this.requestPOST(fullUrl, { email });\n  }\n\n  async rateExercise(id, rate = 0, email = '', review = '') {\n    const fullUrl = `${this.baseURL}/exercises/${id}/rating`;\n    return this.requestPATCH(fullUrl, { rate, email, review });\n  }\n\n  async requestGET(url) {\n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async requestPOST(url, body) {\n    try {\n      const response = await axios.post(url, body);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async requestPATCH(url, body) {\n    try {\n      const response = await axios.patch(url, body);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getParameters(parameters) {\n    const params = new URLSearchParams(parameters);\n    return params.toString();\n  }\n}\n\nexport default APIService;\n","export const initializeMenu = () => {\n  const menuButton = document.querySelector('.burger-menu');\n  const menu = document.querySelector('.menu');\n  const menuBackdrop = document.querySelector('.menu-backdrop');\n  const closeMenuButton = document.querySelector('.close-menu-button');\n  const mobileNavigation = document.querySelector('.mobile-nav-list');\n\n  const toggleMenu = () => {\n    menu.classList.toggle('active');\n    menuBackdrop.classList.toggle('active');\n    menuButton.classList.toggle('active');\n  };\n\n  menuButton.addEventListener('click', toggleMenu);\n  menuBackdrop.addEventListener('click', toggleMenu);\n  closeMenuButton.addEventListener('click', toggleMenu);\n  mobileNavigation.addEventListener('click', toggleMenu);\n};\n\nexport const initializeNavigationLinks = () => {\n  const links = document.querySelectorAll('.nav-link');\n  const currentPath = window.location.pathname.split('/').pop() || 'index.html';\n\n  const isActiveLink = linkPath => linkPath === currentPath;\n  links.forEach(link => {\n    if (isActiveLink(link.getAttribute('href'))) {\n      link.classList.add('active');\n    }\n  });\n};\n","import ApiService from './api.js';\nimport { initializeMenu, initializeNavigationLinks } from './menu.js';\nconst apiService = new ApiService();\n\n// Функція для відображення цитати дня\nasync function displayQuote() {\n  try {\n    const response = await apiService.getQuote();\n    if (response) {\n      document.querySelector('.quote-text').textContent = response.quote || '';\n      document.querySelector('.quote-author').textContent =\n        response.author || '';\n    } else {\n      console.log('Failed to load quote of the day.');\n    }\n  } catch (error) {\n    console.error('Error fetching quote of the day:', error);\n  }\n}\n\n// Функція для отримання масиву ID обраних вправ із localStorage\nfunction getFavoriteExerciseIds() {\n  return JSON.parse(localStorage.getItem('favoriteExercises')) || [];\n}\n\n// Функція для видалення вправи з обраного\nfunction removeFavoriteExercise(id) {\n  const updatedFavorites = getFavoriteExerciseIds().filter(\n    favId => favId !== id\n  );\n  localStorage.setItem('favoriteExercises', JSON.stringify(updatedFavorites));\n  displayFavoriteExercises(); // Оновлення списку\n}\n\n// Функція для відображення обраних вправ\nasync function displayFavoriteExercises() {\n  const exerciseContainer = document.querySelector('.favorites-list');\n  if (!exerciseContainer) return;\n  const favoriteIds = getFavoriteExerciseIds();\n  exerciseContainer.innerHTML = favoriteIds.length\n    ? (await Promise.all(favoriteIds.map(id => apiService.getExercisesById(id))))\n        .map(createExerciseCardHtml)\n        .join('')\n    : `<li class=\"empty-favorites\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</li>`;\n}\n\n// Функція для створення HTML для кожної картки вправи\nfunction createExerciseCardHtml(exercise) {\n  return `\n    <li class=\"exercises_item\" id=\"${exercise._id}\">\n      <div class=\"exercise-card-header\">\n        <div class=\"card-workout\">\n          <div class=\"card-workout-logo card-text-logo\">Workout</div>\n          <div class=\"workout-logo-addon\">${getLogoSvg(exercise._id)}</div>\n        </div>\n        <div class=\"card-start\">\n          <div class=\"card-start-name usual-text\">Start</div>\n          <div class=\"card-start-arrow\">${svg.arrow}</div>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"card-body-logo\">${svg.runner}</div>\n        <div class=\"card-body-name card-text-name\">${capitalize(\n          exercise.name\n        )}</div>\n      </div>\n      <div class=\"card-footer\">\n        ${createExerciseInfo(\n          'Burned calories',\n          `${exercise.burnedCalories || 0} / ${exercise.time || 0} min`\n        )}\n        ${createExerciseInfo(\n          'Category',\n          capitalize(exercise.categoryName || '')\n        )}\n        ${createExerciseInfo('Target', capitalize(exercise.target || ''))}\n      </div>\n    </li>\n  `;\n}\n\n// Функція для спрощення створення інформаційного блоку\nfunction createExerciseInfo(label, value) {\n  return `\n    <div class=\"card-info card-text-info\">\n      <span class=\"info-item-name\">${label}: </span>\n      <span class=\"long-text\">${value}</span>\n    </div>\n  `;\n}\n\n// Функція для генерації SVG з параметром id\nfunction getLogoSvg(id) {\n  return svg.recycleBin.replace('CARD_ID', id);\n}\n\n// Функція для зміни стилів text\nfunction capitalize(text) {\n  return text ? text.charAt(0).toUpperCase() + text.slice(1) : '';\n}\n\n// Додатковий SVG контент\nconst svg = {\n  recycleBin: `\n    <svg class=\"card-icon recycle-bin\" data-id=\"CARD_ID\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-remove\"></use>\n    </svg>`,\n  arrow: `\n    <svg class=\"card-icon\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-arrow\"></use>\n    </svg>`,\n  runner: `\n    <svg class=\"card-icon\" width=\"24\" height=\"24\">\n        <use href=\"./img/icons.svg#icon-running-stick\"></use>\n    </svg>`,\n};\n\n// Подія для видалення обраної вправи по кліку на значок видалення\ndocument.addEventListener('click', event => {\n  const target = event.target.closest('.recycle-bin');\n  if (target) {\n    const exerciseId = target.getAttribute('data-id');\n    removeFavoriteExercise(exerciseId);\n  }\n});\n\n// Ініціалізація сторінки\ndocument.addEventListener('DOMContentLoaded', () => {\n  displayQuote();\n  displayFavoriteExercises();\n  initializeMenu();\n  initializeNavigationLinks();\n});\n"],"names":["BASE_URL","APIService","params1","params2","page","fullUrl","params3","id","params","limit","filter","category","categoryName","keyword","ratingData","email","rate","review","url","axios","error","body","parameters","initializeMenu","menuButton","menu","menuBackdrop","closeMenuButton","mobileNavigation","toggleMenu","initializeNavigationLinks","links","currentPath","isActiveLink","linkPath","link","apiService","ApiService","displayQuote","response","getFavoriteExerciseIds","removeFavoriteExercise","updatedFavorites","favId","displayFavoriteExercises","exerciseContainer","favoriteIds","createExerciseCardHtml","exercise","getLogoSvg","svg","capitalize","createExerciseInfo","label","value","text","event","target","exerciseId"],"mappings":"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"}