{"version":3,"file":"favorites-bbhvW5q9.js","sources":["../../src/js/api-service.js","../../src/js/api.js","../../src/img/sprite.svg","../../src/img/modal-exercise-image.jpg","../../src/img/modal-exercise-image@2x.jpg","../../src/js/remove-local.js","../../src/js/modal-exercises.js","../../src/js/menu.js","../../src/js/quote.js","../../src/js/favorites.js"],"sourcesContent":["import axios from 'axios';\n\nexport default class APIService {\n  constructor() {\n    this.baseURL = 'https://your-energy.b.goit.study/api/';\n    this.page = 0;\n  }\n\n  async getExercises(params1, params2, page) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}exercises?${params1}=${params2}&page=${page}&limit=10`\n      );\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getExercisesById(_id) {\n    try {\n      const response = await axios.get(`${this.baseURL}exercises/${_id}`);\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async getFilter(params, page) {\n    try {\n      const response = await axios.get(\n        `${this.baseURL}filters?filter=${params}&page=${page}&limit=12`\n      );\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async patchRating(_id, ratingData) {\n    try {\n      this.page += 1;\n      const response = await axios.patch(\n        `${this.baseURL}exercises/${_id}/rating`,\n        ratingData\n      );\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://your-energy.b.goit.study/api';\n\nclass APIService {\n  constructor() {\n    this.baseURL = BASE_URL;\n    this.page = 0;\n  }\n\n  async getExercises(params1, params2, page = 1) {\n    const fullUrl = `${this.baseURL}/exercises?${params1}=${params2}&page=${page}&limit=10`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getSearch(params1, params2, params3) {\n    const fullUrl = `${this.baseURL}/exercises?${params2}=${params1}&keyword=${params3}&page=1&limit=10`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getExercisesById(id) {\n    const fullUrl = `${this.baseURL}/exercises/${id}`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getFilter(params, page = 1) {\n    const fullUrl = `${this.baseURL}/filters?filter=${params}&page=${page}&limit=12`;\n    return this.requestGET(fullUrl);\n  }\n\n  async getQuote() {\n    const fullUrl = `${this.baseURL}/quote`;\n    return this.requestGET(fullUrl);\n  }\n\n  async postSubscriptions(email) {\n    const fullUrl = `${this.baseURL}/subscription`;\n    return axios.post(fullUrl, { email });\n  }\n\n  async requestGET(url) {\n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport default APIService;\n","export default \"__VITE_ASSET__5bFOxXDe__\"","export default \"__VITE_ASSET__DPvZb0J4__\"","export default \"__VITE_ASSET__CvslaKfH__\"","import icons from '../img/sprite.svg';\n\nfunction removeElement(event) {\n  if (!event.target.closest('.js-remove-btn')) {\n    return;\n  }\n\n  const exerciseId = event.target\n    .closest('.js-remove-btn')\n    .getAttribute('data-id');\n\n  const local = JSON.parse(localStorage.getItem('exerciseData'));\n\n  const newLocal = local.filter(item => item._id !== exerciseId);\n\n  localStorage.setItem('exerciseData', JSON.stringify(newLocal));\n\n  createMarkupFavorite();\n}\n\nexport function createMarkupFavorite() {\n  const newLocal = JSON.parse(localStorage.getItem('exerciseData'));\n\n  if (newLocal.length === 0) {\n    localFavorite.innerHTML = '';\n\n    const markup = `\n     <li class=\"favorites__empty\">\n            It appears that you haven't added any exercises to your favorites\n            yet. To get started, you can add exercises that you like to your\n            favorites for easier access in the future.\n          </li>\n    `;\n\n    localFavorite.insertAdjacentHTML('beforeend', markup);\n  } else {\n    localFavorite.innerHTML = '';\n    const markup = newLocal\n      .map(({ _id, name, burnedCalories, bodyPart, target }) => {\n        return `\n      <li class=\"fav-filters__item-card\">\n        <div class=\"fav-card__wrap\">\n          <div class=\"fav-card__block-btn\">\n            <div class=\"fav-card__trash-btn-wrap\">\n              <p class=\"fav-card__badge\">Workout</p>\n              <button class=\"fav-card__btn js-remove-btn\" data-id=\"${_id}\" type=\"button\">\n                <svg class=\"fav-card__btn-trash-svg\" width=\"16\" height=\"16\">\n                <use href=\"${icons}#icon-trash\"></use>\n                </svg>\n              </button>\n            </div>\n            <button class=\"fav-card__btn-start card__btn\" data-id=\"${_id}\" type=\"button\">Start\n              <svg class=\"fav-card__btn-start-svg\" width=\"16\" height=\"16\">\n                 <use href=\"${icons}#icon-arrow\"></use>\n              </svg>\n            </button>\n          </div>\n\n          <div class=\"fav-card__title-wrap\">\n            <svg class=\"fav-card__title-svg\" width=\"24\" height=\"24\">\n              <use href=\"${icons}#icon-running-stick-figure\"></use>\n            </svg>\n            <h2 class=\"fav-card__title\">${name}</h2>\n          </div>\n\n          <div class=\"fav-card__block-info\">\n            <p class=\"fav-card__text-info\"><span>Burned calories:</span>${burnedCalories}</p>\n            <p class=\"fav-card__text-info\"><span>Body part:</span>${bodyPart}</p>\n            <p class=\"fav-card__text-info\"><span>Target:</span>${target}</p>\n          </div>\n        </div>\n      </li>`;\n      })\n      .join('');\n\n    localFavorite.insertAdjacentHTML('beforeend', markup);\n  }\n}\n\nfunction init() {\n  const localFavorite = document.querySelector('.js-list');\n\n  localFavorite.addEventListener('click', removeElement);\n}\ndocument.addEventListener('load', init)","import APIService from './api-service';\nimport icons from '../img/sprite.svg';\nimport image from '../img/modal-exercise-image.jpg';\nimport imageRetina from '../img/modal-exercise-image@2x.jpg';\nconst apiService = new APIService();\n\nimport { createMarkupFavorite } from './remove-local';\n\nlet isFavorite = false;\nlet idFavorite;\n\nconst modalExercises = document.querySelector('.modal-exercises');\nconst overlay = document.querySelector('.overlay');\nconst listItem = document.querySelector('.js-list');\n\nlistItem?.addEventListener('click', onExercisesCardClick);\n\nasync function onExercisesCardClick(event) {\n  if (!event.target.closest('.card__btn')) {\n    return;\n  }\n\n  try {\n    const exerciseID = event.target\n      .closest('.card__btn')\n      .getAttribute('data-id');\n\n    const exerciseData = await apiService.getExercisesById(exerciseID);\n\n    idFavorite = exerciseID;\n\n    const markup = createMarkup(exerciseData);\n    updateModal(markup);\n    openModalExercises();\n\n    const btnModalFavorites = document.querySelector(\n      '.modal-exercises__btn-favorites'\n    );\n    btnModalFavorites.addEventListener('click', () => toggleBtn(exerciseData));\n    const btnModalClose = document.querySelector('.modal-exercises__btn-close');\n    btnModalClose.addEventListener('click', closeModalExercises);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function openModalExercises() {\n  const lockPaddingValue = window.innerWidth - document.body.offsetWidth + 'px';\n\n  modalExercises.classList.remove('hidden');\n  overlay.classList.remove('hidden');\n  document.body.style.paddingRight = lockPaddingValue;\n  document.body.style.overflow = 'hidden';\n}\n\nexport function updateModal(markup) {\n  modalExercises.innerHTML = markup;\n\n  const btnModalClose = modalExercises.querySelector(\n    '.modal-exercises__btn-close'\n  );\n  btnModalClose?.addEventListener('click', closeModalExercises);\n  toggleFavorites();\n}\n\nfunction createRating(rating) {\n  const starColor = '#EEA10C';\n  const emptyStarColor = '#F4F4F4';\n  const totalStars = 5;\n\n  let stars = '';\n  for (let i = 0; i < totalStars; i++) {\n    const gradientId = `starGradient${i}`;\n    const fillPercentage =\n      i + 1 <= rating ? 100 : i < rating ? (rating % 1) * 100 : 0;\n\n    const gradientStops = [\n      { offset: '0%', color: starColor, opacity: '1' },\n      { offset: `${fillPercentage}%`, color: starColor, opacity: '1' },\n      {\n        offset: `${fillPercentage + 1}%`,\n        color: emptyStarColor,\n        opacity: '0.20',\n      },\n    ];\n\n    const linearGradient = `\n        <linearGradient id=\"${gradientId}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          ${gradientStops\n            .map(\n              stop =>\n                `<stop offset=\"${stop.offset}\" style=\"stop-color:${stop.color};stop-opacity:${stop.opacity}\" />`\n            )\n            .join('')}\n        </linearGradient>\n      `;\n\n    const fill = `url(#${gradientId})`;\n\n    stars += `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"13\" viewBox=\"0 0 14 13\" fill=\"none\">${linearGradient}<path d=\"M6.04894 0.927052C6.3483 0.0057416 7.6517 0.00574088 7.95106 0.927052L8.79611 3.52786C8.92999 3.93989 9.31394 4.21885 9.74717 4.21885H12.4818C13.4505 4.21885 13.8533 5.45846 13.0696 6.02786L10.8572 7.63525C10.5067 7.8899 10.3601 8.34127 10.494 8.75329L11.339 11.3541C11.6384 12.2754 10.5839 13.0415 9.80017 12.4721L7.58779 10.8647C7.2373 10.6101 6.7627 10.6101 6.41222 10.8647L4.19983 12.4721C3.41612 13.0415 2.36164 12.2754 2.66099 11.3541L3.50604 8.75329C3.63992 8.34127 3.49326 7.8899 3.14277 7.63525L0.930391 6.02787C0.146677 5.45846 0.549452 4.21885 1.51818 4.21885H4.25283C4.68606 4.21885 5.07001 3.93989 5.20389 3.52786L6.04894 0.927052Z\" fill=\"${fill}\" fill-opacity=\"1\"/></svg>`;\n  }\n\n  const ratingText = Number.isInteger(rating)\n    ? `${rating}.0`\n    : rating.toFixed(1);\n\n  const ratingWithStars = `${ratingText} ${stars}`;\n\n  return ratingWithStars;\n}\n\nexport function createMarkup({\n  _id,\n  bodyPart,\n  equipment,\n  gifUrl,\n  name,\n  target,\n  description,\n  rating,\n  burnedCalories,\n  time,\n  popularity,\n}) {\n  const getExerciseGif = getGif(gifUrl);\n  function getGif(gifUrl) {\n    if (gifUrl === null || !gifUrl) {\n      return `srcset = '${image} 1x,${imageRetina} 2x'\n      src = '${image}'`;\n    }\n    return `src=\"${gifUrl}\"`;\n  }\n\n  const ratingStarsHTML = createRating(rating);\n\n  return `\n  <div class=\"modal-exercises__container\" data-id=\"${_id}\">\n    <button class=\"modal-exercises__btn-close\">\n      <svg width=\"24\" height=\"24\">\n        <use href=\"${icons}#icon-menu-mobile-close\"></use>\n      </svg>\n    </button>\n\n    <img\n    class=\"modal-exercises__img\"\n    ${getExerciseGif}\n    alt=\"Exercise image\"\n    loading=\"lazy\"\n    />\n\n    <div class=\"modal-exercises__card\">\n      <h2 class=\"modal-exercises__name\">${name}</h2>\n      <div class=\"modal-exercises__rating\">${ratingStarsHTML}</div>\n\n        <div class=\"modal-exercises__block\">\n          <ul class=\"modal-exercises__list\">\n            <li class=\"modal-exercises__item\">\n              <h3 class=\"modal-exercises__subtitle\">Target</h3>\n              <p class=\"modal-exercises__text\">${target}</p>\n            </li>\n\n            <li class=\"modal-exercises__item\">\n              <h3 class=\"modal-exercises__subtitle\">Body Part</h3>\n              <p class=\"modal-exercises__text\">${bodyPart}</p>\n            </li>\n\n            <li class=\"modal-exercises__item\">\n              <h3 class=\"modal-exercises__subtitle\">Equipment</h3>\n              <p class=\"modal-exercises__text\">${equipment}</p>\n            </li>\n\n            <li class=\"modal-exercises__item\">\n              <h3 class=\"modal-exercises__subtitle\">Popular</h3>\n              <p class=\"modal-exercises__text\">${popularity}</p>\n            </li>\n\n            <li class=\"modal-exercises__item\">\n              <h3 class=\"modal-exercises__subtitle\">Burned Calories</h3>\n              <p class=\"modal-exercises__text\">${burnedCalories}/${time}</p>\n            </li>\n          </ul>\n          <p class=\"modal-exercises__description\">${description}</p>\n        </div>\n    </div>\n  </div>\n  <div class=\"modal-exercises__btn-container\">\n  <button class=\"modal-exercises__btn-favorites modal-exercises__btn\" type=\"button\" data-id=\"${_id}\">\n      Add to favorites\n      <svg class=\"btn-favorites__icon\">\n        <use href=\"${icons}#icon-favorites\"></use>\n      </svg>\n    </button>\n  <button class=\"modal-exercises__btn-rating modal-exercises__btn\" type=\"button\" data-id=\"${_id}\">Give a rating</button>\n</div>\n`;\n}\n\nfunction toggleFavorites() {\n  const local = JSON.parse(localStorage.getItem('exerciseData'));\n\n  const btnModalFavorites = document.querySelector(\n    '.modal-exercises__btn-favorites'\n  );\n\n  if (local?.some(item => item._id === idFavorite)) {\n    isFavorite = true;\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n  } else {\n    isFavorite = false;\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n  }\n}\n\nconst favoriteExercises = 'favoriteExercises';\n\nfunction addToFavorites(exerciseData) {\n  const favorites = JSON.parse(localStorage.getItem(favoriteExercises)) || [];\n  favorites.push(exerciseData._id);\n  localStorage.setItem(favoriteExercises, JSON.stringify(favorites));\n}\n\nfunction removeFavorite(exerciseData) {\n  const favorites = JSON.parse(localStorage.getItem(favoriteExercises)) || [];\n\n  const filteredFavorites = favorites.filter(\n    favorite => favorite !== exerciseData._id\n  );\n\n  localStorage.setItem(\n    favoriteExercises,\n    JSON.stringify(favorites.push(filteredFavorites))\n  );\n}\n\nfunction toggleBtn(exerciseData) {\n  console.log('exerciseData', exerciseData);\n  isFavorite = !isFavorite;\n  const btnModalFavorites = document.querySelector(\n    '.modal-exercises__btn-favorites'\n  );\n\n  const localFavorite = document.querySelector('.favorites__list');\n\n  if (isFavorite) {\n    btnModalFavorites.innerHTML = createRemoveFromFavoritesMarkup();\n    localFavorite == null\n      ? addToFavorites(exerciseData)\n      : setTimeout(() => {\n          createMarkupFavorite();\n        }, 100);\n  } else {\n    btnModalFavorites.innerHTML = createAddToFavoritesMarkup();\n    localFavorite == null\n      ? removeFavorite(exerciseData)\n      : setTimeout(() => {\n          createMarkupFavorite();\n        }, 100);\n  }\n}\n\nfunction createAddToFavoritesMarkup() {\n  return `\n  Add to favorites\n    <svg class=\"btn-favorites__icon\">\n    <use href=\"${icons}#icon-favorites\"></use>\n    </svg>`;\n}\n\nfunction createRemoveFromFavoritesMarkup() {\n  return `\n  Remove from favorites\n  <svg class=\"btn-favorites__icon\">\n    <use href=\"${icons}#icon-trash\"></use>\n  </svg>`;\n}\n\nfunction closeModalExercises() {\n  modalExercises.classList.add('hidden');\n  overlay.classList.add('hidden');\n  document.body.style.paddingRight = '0px';\n  document.body.style.overflow = 'auto';\n}\n\noverlay?.addEventListener('click', function (event) {\n  if (event.target === overlay) {\n    closeModalExercises();\n  }\n});\n\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape' && !modalExercises.classList.contains('hidden')) {\n    closeModalExercises();\n  }\n});\n","export const initializeMenu = () => {\n  const menuButton = document.querySelector('.burger-menu');\n  const menu = document.querySelector('.menu');\n  const menuBackdrop = document.querySelector('.menu-backdrop');\n  const closeMenuButton = document.querySelector('.close-menu-button');\n  const mobileNavigation = document.querySelector('.mobile-nav-list');\n\n  const toggleMenu = () => {\n    menu.classList.toggle('active');\n    menuBackdrop.classList.toggle('active');\n    menuButton.classList.toggle('active');\n  };\n\n  menuButton.addEventListener('click', toggleMenu);\n  menuBackdrop.addEventListener('click', toggleMenu);\n  closeMenuButton.addEventListener('click', toggleMenu);\n  mobileNavigation.addEventListener('click', toggleMenu);\n};\n\nexport const initializeNavigationLinks = () => {\n  const links = document.querySelectorAll('.nav-link');\n  const currentPath = window.location.pathname.split('/').pop() || 'index.html';\n\n  const isActiveLink = linkPath => linkPath === currentPath;\n  links.forEach(link => {\n    if (isActiveLink(link.getAttribute('href'))) {\n      link.classList.add('active');\n    }\n  });\n};\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://your-energy.b.goit.study/api',\n  headers: {\n    Accept: 'application/json',\n  },\n});\n\nexport const fetchQuote = async () => {\n  try {\n    const response = await api.get('/quote');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching the quote:', error);\n  }\n};\n\nconst getQuoteOfTheDay = async () => {\n  const today = new Date().toISOString().split('T')[0];\n  const storedQuote = localStorage.getItem('quote');\n  const storedDate = localStorage.getItem('quoteDate');\n\n  if (storedDate === today && storedQuote) {\n    return JSON.parse(storedQuote);\n  }\n\n  const quoteData = await fetchQuote();\n  if (quoteData) {\n    localStorage.setItem('quote', JSON.stringify(quoteData));\n    localStorage.setItem('quoteDate', today);\n  }\n  return quoteData;\n};\n\nexport const displayQuoteOfTheDay = async () => {\n  const quoteData = await getQuoteOfTheDay();\n\n  if (quoteData) {\n    document.querySelector('.description').textContent = quoteData.quote;\n    document.querySelector('.quote-author').textContent =\n      quoteData.author || '';\n  }\n};\n","import ApiService from './api.js';\nimport { initializeMenu, initializeNavigationLinks } from './menu.js';\nimport { displayQuoteOfTheDay } from './quote.js';\nimport {\n  openModalExercises,\n  createMarkup,\n  updateModal,\n} from './modal-exercises.js';\n\nconst apiService = new ApiService();\n\n// Функція для відкриття модального вікна при натисканні на картку обраної вправи\nasync function onFavoriteCardClick(event) {\n  const button = event.target.closest('.card__btn');\n  if (!button) return;\n\n  try {\n    const exerciseID = button.getAttribute('data-id');\n    const exerciseData = await apiService.getExercisesById(exerciseID);\n\n    const markup = createMarkup(exerciseData);\n    updateModal(markup);\n    openModalExercises();\n  } catch (error) {\n    console.error('Error fetching exercise data:', error);\n  }\n}\n\n// Функція для отримання масиву ID обраних вправ із localStorage\nfunction getFavoriteExerciseIds() {\n  return JSON.parse(localStorage.getItem('favoriteExercises')) || [];\n}\n\n// Функція для видалення вправи з обраного\nfunction removeFavoriteExercise(id) {\n  const updatedFavorites = getFavoriteExerciseIds().filter(\n    favId => favId !== id\n  );\n  localStorage.setItem('favoriteExercises', JSON.stringify(updatedFavorites));\n  displayFavoriteExercises(); // Оновлення списку\n}\n\n// Функція для відображення обраних вправ\nasync function displayFavoriteExercises() {\n  const exerciseContainer = document.querySelector('.favorites-list');\n  if (!exerciseContainer) return;\n  const favoriteIds = getFavoriteExerciseIds();\n  exerciseContainer.innerHTML = favoriteIds.length\n    ? (\n        await Promise.all(\n          favoriteIds.map(id => apiService.getExercisesById(id))\n        )\n      )\n        .map(createExerciseCardHtml)\n        .join('')\n    : `<li class=\"empty-favorites\">It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</li>`;\n}\n\n// Функція для створення HTML для кожної картки вправи\nfunction createExerciseCardHtml(exercise) {\n  return `\n    <li class=\"exercises_item\" id=\"${exercise._id}\">\n      <div class=\"exercise-card-header\">\n        <div class=\"card-workout\">\n          <div class=\"card-workout-logo card-text-logo\">Workout</div>\n          <div class=\"workout-logo-addon\">${getLogoSvg(exercise._id)}</div>\n        </div>\n        <button class=\"card__btn card-start\" data-id=\"${\n          exercise._id\n        }\" type=\"button\">\n          <span class=\"card-start-name usual-text\">Start</span>\n          <span class=\"card-start-arrow\">${svg.arrow}</span>\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"card-body-logo\">${svg.runner}</div>\n        <div class=\"card-body-name card-text-name\">${capitalize(\n          exercise.name\n        )}</div>\n      </div>\n      <div class=\"card-footer\">\n        ${createExerciseInfo(\n          'Burned calories',\n          `${exercise.burnedCalories || 0} / ${exercise.time || 0} min`\n        )}\n        ${createExerciseInfo(\n          'Category',\n          capitalize(exercise.categoryName || '')\n        )}\n        ${createExerciseInfo('Target', capitalize(exercise.target || ''))}\n      </div>\n    </li>\n  `;\n}\n\n// Функція для спрощення створення інформаційного блоку\nfunction createExerciseInfo(label, value) {\n  return `\n    <div class=\"card-info card-text-info\">\n      <span class=\"info-item-name\">${label}: </span>\n      <span class=\"long-text\">${value}</span>\n    </div>\n  `;\n}\n\n// Функція для генерації SVG з параметром id\nfunction getLogoSvg(id) {\n  return svg.recycleBin.replace('CARD_ID', id);\n}\n\n// Функція для зміни стилів text\nfunction capitalize(text) {\n  return text ? text.charAt(0).toUpperCase() + text.slice(1) : '';\n}\n\n// Додатковий SVG контент\nconst svg = {\n  recycleBin: `\n    <svg class=\"card-icon recycle-bin\" data-id=\"CARD_ID\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-remove\"></use>\n    </svg>`,\n  arrow: `\n    <svg class=\"card-icon\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-arrow\"></use>\n    </svg>`,\n  runner: `\n    <svg class=\"card-icon\" width=\"24\" height=\"24\">\n        <use href=\"./img/icons.svg#icon-running-stick\"></use>\n    </svg>`,\n};\n\n// Подія для видалення обраної вправи по кліку на значок видалення\ndocument.addEventListener('click', event => {\n  const target = event.target.closest('.recycle-bin');\n  if (target) {\n    const exerciseId = target.getAttribute('data-id');\n    removeFavoriteExercise(exerciseId);\n  }\n});\n\n// Ініціалізація подій та даних після завантаження DOM\ndocument.addEventListener('DOMContentLoaded', () => {\n  const favoriteList = document.querySelector('.favorites-list');\n\n  // Встановлюємо обробник для кліків за картками вибраних вправ\n  if (favoriteList) {\n    favoriteList.addEventListener('click', onFavoriteCardClick);\n  }\n\n  displayQuoteOfTheDay();\n  displayFavoriteExercises();\n  initializeMenu();\n  initializeNavigationLinks();\n});\n"],"names":["APIService$1","params1","params2","page","axios","error","_id","params","ratingData","BASE_URL","APIService","fullUrl","params3","id","email","url","icons","image","imageRetina","removeElement","event","exerciseId","newLocal","item","createMarkupFavorite","markup","name","burnedCalories","bodyPart","target","init","apiService","isFavorite","idFavorite","modalExercises","overlay","listItem","onExercisesCardClick","exerciseID","exerciseData","createMarkup","updateModal","openModalExercises","toggleBtn","closeModalExercises","lockPaddingValue","btnModalClose","toggleFavorites","createRating","rating","starColor","emptyStarColor","stars","i","gradientId","fillPercentage","gradientStops","linearGradient","stop","fill","equipment","gifUrl","description","time","popularity","getExerciseGif","getGif","ratingStarsHTML","local","btnModalFavorites","createRemoveFromFavoritesMarkup","createAddToFavoritesMarkup","favoriteExercises","addToFavorites","favorites","removeFavorite","filteredFavorites","favorite","localFavorite","initializeMenu","menuButton","menu","menuBackdrop","closeMenuButton","mobileNavigation","toggleMenu","initializeNavigationLinks","links","currentPath","isActiveLink","linkPath","link","api","fetchQuote","getQuoteOfTheDay","today","storedQuote","quoteData","displayQuoteOfTheDay","ApiService","onFavoriteCardClick","button","getFavoriteExerciseIds","removeFavoriteExercise","updatedFavorites","favId","displayFavoriteExercises","exerciseContainer","favoriteIds","createExerciseCardHtml","exercise","getLogoSvg","svg","capitalize","createExerciseInfo","label","value","text","favoriteList"],"mappings":"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"}