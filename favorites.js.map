{"version":3,"file":"favorites.js","sources":["../src/js/favorites.js"],"sourcesContent":["import { getQuote, getExerciseById } from './api.js';\n\n// Функція для відображення цитати дня\nasync function displayQuote() {\n  try {\n    const response = await getQuote();\n\n    if (response) {\n      const quoteText = response.quote;\n      const quoteAuthor = response.author;\n\n      const quoteElement = document.querySelector('.quote-text');\n      const authorElement = document.querySelector('.quote-author');\n\n      if (quoteElement && authorElement) {\n        quoteElement.textContent = quoteText;\n        authorElement.textContent = `${quoteAuthor}`;\n      }\n    } else {\n      console.log('Failed to load quote of the day.');\n    }\n  } catch (error) {\n    console.error('Error fetching quote of the day:', error);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', displayQuote);\n\n// Функція для отримання масиву ID обраних вправ із localStorage\nfunction getFavoriteExerciseIds() {\n  const favorites = localStorage.getItem('favoriteExercises');\n  return favorites ? JSON.parse(favorites) : [];\n}\n\n// Функція для відображення обраних вправ\nasync function displayFavoriteExercises() {\n  const exerciseContainer = document.querySelector('.favorites-list');\n  const favoriteIds = getFavoriteExerciseIds();\n\n  exerciseContainer.innerHTML = '';\n\n  if (favoriteIds.length === 0) {\n    exerciseContainer.innerHTML = `\n      <li class=\"empty-favorites\">\n        It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.\n      </li>\n    `;\n    return;\n  }\n\n  const exercisePromises = favoriteIds.map(id => getExerciseById(id));\n  const exercises = await Promise.all(exercisePromises);\n\n  exercises.forEach(exercise => {\n    const exerciseHtml = createExerciseCardHtml(exercise);\n    exerciseContainer.insertAdjacentHTML('beforeend', exerciseHtml);\n  });\n}\n\n// Функція для створення HTML для кожної картки вправи\nfunction createExerciseCardHtml(exercise) {\n  return `\n    <li class=\"exercises_item\" id=\"${exercise._id}\">\n      <div class=\"exercise-card-header\">\n        <div class=\"card-workout\">\n          <div class=\"card-workout-logo card-text-logo\">Workout</div>\n          <div class=\"workout-logo-addon text-usual\">${getLogoSvg(\n            true,\n            exercise._id,\n            exercise.rating || 0\n          )}</div>\n        </div>\n        <div class=\"card-start\">\n          <div class=\"card-start-name usual-text\">Start</div>\n          <div class=\"card-start-arrow\">${svg.arrow}</div>\n        </div>\n      </div>\n\n      <div class=\"card-body\">\n        <div class=\"card-body-logo\">${svg.runner}</div>\n        <div class=\"card-body-name card-text-name\">\n          ${capitalize(exercise.name)}\n        </div>\n      </div>\n\n      <div class=\"card-footer\">\n        <div class=\"card-info card-text-info\">\n          <span class=\"info-item-name\">Burned calories: </span>\n          <span class=\"long-text\">\n            ${exercise.burnedCalories || 0} / ${exercise.time || 0} min\n          </span>\n        </div>\n        <div class=\"card-info card-text-info\">\n          <span class=\"info-item-name\">Category: </span>\n          <span class=\"long-text\">${capitalize(\n            exercise.categoryName || ''\n          )}</span>\n        </div>\n        <div class=\"card-info card-text-info\">\n          <span class=\"info-item-name\">Target: </span>\n          <span class=\"long-text\">${capitalize(exercise.target || '')}</span>\n        </div>\n      </div>\n    </li>\n  `;\n}\n\n// Функція для налаштування кнопок видалення вправ\nfunction setupRemoveFavoriteButtons() {\n  document.addEventListener('click', event => {\n    if (event.target.closest('.recycle-bin')) {\n      const exerciseId = event.target\n        .closest('.recycle-bin')\n        .getAttribute('data-card');\n      removeFavoriteExercise(exerciseId);\n      displayFavoriteExercises(); // Оновлюємо список після видалення\n    }\n  });\n}\n\n// Функція для видалення вправи з обраного\nfunction removeFavoriteExercise(id) {\n  const favoriteIds = getFavoriteExerciseIds();\n  const updatedFavorites = favoriteIds.filter(favId => favId !== id);\n  localStorage.setItem('favoriteExercises', JSON.stringify(updatedFavorites));\n}\n\n// Ініціалізація сторінки обраних вправ\ndocument.addEventListener('DOMContentLoaded', () => {\n  displayFavoriteExercises();\n  setupRemoveFavoriteButtons();\n});\n\n/*-----------------------------------------------------------*/\n\nfunction capitalize(text) {\n  return text ? text.charAt(0).toUpperCase() + text.slice(1) : '';\n}\n\nfunction getLogoSvg(isFavorites, id) {\n  return isFavorites ? svg.recycleBin.replace('CARD_ID', id) : svg.rating;\n}\n\nconst svg = {\n  recycleBin: `\n    <svg class=\"card-icon recycle-bin\" data-card=\"CARD_ID\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-remove\" data-card=\"CARD_ID\"></use>\n    </svg>`,\n  arrow: `\n    <svg class=\"card-icon\" width=\"16\" height=\"16\">\n        <use href=\"./img/icons.svg#icon-arrow\"></use>\n    </svg>`,\n  runner: `\n    <svg class=\"card-icon\" width=\"24\" height=\"24\">\n        <use href=\"./img/icons.svg#icon-running-stick\"></use>\n    </svg>`,\n};\n"],"names":["displayQuote","response","getQuote","quoteText","quoteAuthor","quoteElement","authorElement","error","getFavoriteExerciseIds","favorites","displayFavoriteExercises","exerciseContainer","favoriteIds","exercisePromises","id","getExerciseById","exercise","exerciseHtml","createExerciseCardHtml","getLogoSvg","svg","capitalize","setupRemoveFavoriteButtons","event","exerciseId","removeFavoriteExercise","updatedFavorites","favId","text","isFavorites"],"mappings":"wFAGA,eAAeA,GAAe,CAC5B,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAU,EAEjC,GAAID,EAAU,CACZ,MAAME,EAAYF,EAAS,MACrBG,EAAcH,EAAS,OAEvBI,EAAe,SAAS,cAAc,aAAa,EACnDC,EAAgB,SAAS,cAAc,eAAe,EAExDD,GAAgBC,IAClBD,EAAa,YAAcF,EAC3BG,EAAc,YAAc,GAAGF,CAAW,GAElD,MACM,QAAQ,IAAI,kCAAkC,CAEjD,OAAQG,EAAO,CACd,QAAQ,MAAM,mCAAoCA,CAAK,CAC3D,CACA,CAEA,SAAS,iBAAiB,mBAAoBP,CAAY,EAG1D,SAASQ,GAAyB,CAChC,MAAMC,EAAY,aAAa,QAAQ,mBAAmB,EAC1D,OAAOA,EAAY,KAAK,MAAMA,CAAS,EAAI,CAAE,CAC/C,CAGA,eAAeC,GAA2B,CACxC,MAAMC,EAAoB,SAAS,cAAc,iBAAiB,EAC5DC,EAAcJ,EAAwB,EAI5C,GAFAG,EAAkB,UAAY,GAE1BC,EAAY,SAAW,EAAG,CAC5BD,EAAkB,UAAY;AAAA;AAAA;AAAA;AAAA,MAK9B,MACJ,CAEE,MAAME,EAAmBD,EAAY,IAAIE,GAAMC,EAAgBD,CAAE,CAAC,GAChD,MAAM,QAAQ,IAAID,CAAgB,GAE1C,QAAQG,GAAY,CAC5B,MAAMC,EAAeC,EAAuBF,CAAQ,EACpDL,EAAkB,mBAAmB,YAAaM,CAAY,CAClE,CAAG,CACH,CAGA,SAASC,EAAuBF,EAAU,CACxC,MAAO;AAAA,qCAC4BA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA,uDAIMG,EAC3C,GACAH,EAAS,IACTA,EAAS,QAAU,CAC/B,CAAW;AAAA;AAAA;AAAA;AAAA,0CAI+BI,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,sCAKbA,EAAI,MAAM;AAAA;AAAA,YAEpCC,EAAWL,EAAS,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAQvBA,EAAS,gBAAkB,CAAC,MAAMA,EAAS,MAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,oCAK9BK,EACxBL,EAAS,cAAgB,EACrC,CAAW;AAAA;AAAA;AAAA;AAAA,oCAIyBK,EAAWL,EAAS,QAAU,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,GAKrE,CAGA,SAASM,GAA6B,CACpC,SAAS,iBAAiB,QAASC,GAAS,CAC1C,GAAIA,EAAM,OAAO,QAAQ,cAAc,EAAG,CACxC,MAAMC,EAAaD,EAAM,OACtB,QAAQ,cAAc,EACtB,aAAa,WAAW,EAC3BE,EAAuBD,CAAU,EACjCd,GACN,CACA,CAAG,CACH,CAGA,SAASe,EAAuBX,EAAI,CAElC,MAAMY,EADclB,EAAwB,EACP,OAAOmB,GAASA,IAAUb,CAAE,EACjE,aAAa,QAAQ,oBAAqB,KAAK,UAAUY,CAAgB,CAAC,CAC5E,CAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDhB,EAA0B,EAC1BY,EAA4B,CAC9B,CAAC,EAID,SAASD,EAAWO,EAAM,CACxB,OAAOA,EAAOA,EAAK,OAAO,CAAC,EAAE,YAAa,EAAGA,EAAK,MAAM,CAAC,EAAI,EAC/D,CAEA,SAAST,EAAWU,EAAaf,EAAI,CACnC,OAAOe,EAAcT,EAAI,WAAW,QAAQ,UAAWN,CAAE,EAAIM,EAAI,MACnE,CAEA,MAAMA,EAAM,CACV,WAAY;AAAA;AAAA;AAAA,YAIZ,MAAO;AAAA;AAAA;AAAA,YAIP,OAAQ;AAAA;AAAA;AAAA,WAIV"}